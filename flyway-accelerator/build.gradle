plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'net.ltgt.apt' version '0.20'
	id 'checkstyle'
}

group = 'com.softeq'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '14'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	checkstyleToolVersion = '8.25'
	swaggerVersion = '2.9.2'
	mapStructVersion = '1.3.0.Final'
	junitVersion = '5.5.2'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

	implementation 'org.flywaydb:flyway-core'
	implementation "org.mapstruct:mapstruct-processor:$mapStructVersion"
	implementation "org.mapstruct:mapstruct:$mapStructVersion"

	implementation("io.springfox:springfox-swagger2:$swaggerVersion") {
		exclude group: 'org.mapstruct', module: 'mapstruct-processor'
	}
	implementation "io.springfox:springfox-swagger-ui:$swaggerVersion"

	compileOnly('org.projectlombok:lombok')
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.mapstruct:mapstruct-processor:$mapStructVersion"

	testImplementation "org.springframework.boot:spring-boot-starter-test"

	testAnnotationProcessor "org.mapstruct:mapstruct-processor:$mapStructVersion"

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

build.dependsOn 'readGradleProperties'

checkstyle {
	configFile file('gradle/checkstyle/oracle_checks.xml')
}

// Migration java classes have version specific names so we need to exclude them from the check
tasks.withType(Checkstyle) {
	exclude '/com/softeq/accelerator/flyway/prod/db/migration/**'
}

test {
	useJUnitPlatform()
}

task readGradleProperties {
    def appGradle = new File('src/main/resources/application-gradle.properties')
    if (!appGradle.exists()) {
        new File('src/main/resources', 'application-gradle.properties').text = ""
        def newAppGradle = new File('src/main/resources/application-gradle.properties')
        newAppGradle.append("app.version=")
        newAppGradle.append(this.version.toString().replace("'", ""))
    }
}
